{"version":3,"sources":["env.js","loading-button.js","students/add-student.js","mentors/add-mentor.js","progress-loader.js","students/map-mentors.js","mentors/map-students.js","App.js","index.js"],"names":["baseUrl","LoadingButton","className","type","disabled","role","aria-hidden","AddStudent","alert","useAlert","useState","loading","setLoading","email","setEmail","name","setName","a","data","fetch","env","method","body","JSON","stringify","headers","req","json","res","statusCode","show","message","htmlFor","id","value","onChange","e","target","aria-describedby","onClick","AddMentor","console","log","ProgressLoader","MapMentors","submitLoad","setSubmitLoad","studentList","setStudentList","selectedStu","setSelectedStu","mentorList","setMentorList","selectedMent","setSelectedMent","loadData","req2","res2","mentor","find","ele","index","useEffect","map","MapStudents","students","filter","selected","data-toggle","aria-haspopup","aria-expanded","mentorObj","count","forEach","stu","i","App","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.fe32caf1.chunk.js","sourcesContent":["const baseUrl = 'https://student-mentor-backend.herokuapp.com/';\n\nexport default baseUrl;","const LoadingButton = () => (\n  <button className=\"btn btn-primary\" type=\"button\" disabled>\n    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>&nbsp;\n    <span className=\"visually-hidden\">Loading...</span>\n  </button>\n);\n\nexport default LoadingButton;","import { useState } from 'react';\nimport env from '../env';\nimport { useAlert } from 'react-alert';\nimport LoadingButton from '../loading-button';\n\nconst AddStudent = () => {\n  const alert = useAlert();\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n\n  async function addStudent() {\n    setLoading(true);\n    const data = { name, email };\n    let type = 'success';\n    const req = await fetch(`${env}students/create-student`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const res = await req.json();\n    setLoading(false);\n\n    if (res.statusCode == 200) {\n      setName('');\n      setEmail('');\n    } else {\n      type = 'error';\n    }\n    alert.show(res.message, {\n      type: type,\n    });\n  }\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header student-card text-light\">Add New Student</div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <div className=\"form-group\">\n                <label htmlFor=\"studentEmail\">Student Email ID</label>\n                <input type=\"email\" className=\"form-control\" id=\"studentEmail\" value={email} onChange={(e) => setEmail(e.target.value)} aria-describedby=\"email\" />\n                <small id=\"email\" className=\"form-text text-muted\">\n                  To check whether the student already exists.\n                </small>\n              </div>\n            </div>\n            <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <div className=\"form-group\">\n                <label htmlFor=\"studentName\">Student Name</label>\n                <input type=\"text\" className=\"form-control\" id=\"studentName\" value={name} onChange={(e) => setName(e.target.value)} aria-describedby=\"name\" />\n              </div>\n            </div>\n          </div>\n          {loading === true ? (\n            <LoadingButton />\n          ) : (\n            <button type=\"button\" className=\"btn btn-primary\" onClick={addStudent} disabled={email === '' || name === '' ? true : false}>\n              Submit\n            </button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddStudent;\n","import { useState } from 'react';\nimport env from '../env';\nimport { useAlert } from 'react-alert';\nimport LoadingButton from '../loading-button';\n\nconst AddMentor = () => {\n  const alert = useAlert();\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n\n  async function addMentor() {\n    setLoading(true);\n    const data = { name, email };\n    let type = 'success';\n    console.log('res');\n    const req = await fetch(`${env}mentors/create-mentor`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const res = await req.json();\n    setLoading(false);\n\n    if (res.statusCode == 200) {\n      setName('');\n      setEmail('');\n    } else {\n      type = 'error';\n    }\n    alert.show(res.message, {\n      type: type,\n    });\n  }\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header mentor-card text-light\">Add New Mentor</div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <div className=\"form-group\">\n                <label htmlFor=\"studentEmail\">Mentor Email ID</label>\n                <input type=\"email\" className=\"form-control\" id=\"studentEmail\" value={email} onChange={(e) => setEmail(e.target.value)} aria-describedby=\"email\" />\n                <small id=\"email\" className=\"form-text text-muted\">\n                  To check whether the student already exists.\n                </small>\n              </div>\n            </div>\n            <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n              <div className=\"form-group\">\n                <label htmlFor=\"studentName\">Mentor Name</label>\n                <input type=\"text\" className=\"form-control\" id=\"studentName\" value={name} onChange={(e) => setName(e.target.value)} aria-describedby=\"name\" />\n              </div>\n            </div>\n          </div>\n          {loading === true ? (\n            <LoadingButton />\n          ) : (\n            <button type=\"button\" className=\"btn btn-primary\" onClick={addMentor} disabled={email === '' || name === '' ? true : false}>\n              Submit\n            </button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddMentor;\n","const ProgressLoader = () => (\n  <div className=\"text-center spinner-border text-success\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </div>\n);\n\nexport default ProgressLoader;","import { useEffect, useState } from 'react';\nimport env from '../env';\nimport ProgressLoader from '../progress-loader';\nimport LoadingButton from '../loading-button';\nimport { useAlert } from 'react-alert';\n\nconst MapMentors = () => {\n  const alert = useAlert();\n  const [loading, setLoading] = useState(false);\n  const [submitLoad, setSubmitLoad] = useState(false);\n  const [studentList, setStudentList] = useState([]);\n  const [selectedStu, setSelectedStu] = useState(-1);\n  const [mentorList, setMentorList] = useState([]);\n  const [selectedMent, setSelectedMent] = useState(-1);\n\n  async function loadData() {\n    setLoading(true);\n    setSelectedMent(-1);\n    setSelectedStu(-1);\n    const req = await fetch(`${env}students`);\n    const res = await req.json();\n    setStudentList(res);\n\n    const req2 = await fetch(`${env}mentors`);\n    const res2 = await req2.json();\n    setMentorList(res2);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function mapMentor() {\n    setSubmitLoad(true);\n    const mentor = mentorList.find((ele, index) => selectedMent === index);\n    const data = { mentor: mentor.name };\n    let type = 'success';\n\n    const id = studentList.find((ele, index) => selectedStu === index).id;\n\n    const req = await fetch(`${env}students/assign-mentor/${id}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const res = await req.json();\n    setSubmitLoad(false);\n    if (res.statusCode != 200) {\n      type = 'error';\n    }\n    alert.show(res.message, {\n      type: type,\n    });\n  }\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header student-card text-light\">Assign Mentor</div>\n        <div className=\"card-body\">\n          {loading == true ? (\n            <ProgressLoader />\n          ) : (\n            <>\n              <div className=\"col-xs-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n                <div className=\"d-flex justify-content-end mb-1\">\n                  <button type=\"button\" className=\"btn btn-dark btn-xs\" onClick={loadData}>\n                    <i className=\"fas fa-sync\"></i> &nbsp;Reload Data\n                  </button>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                  <b>Select Student</b>\n                  <ul className=\"list-group\">\n                    {studentList.map((ele, index) => {\n                      return (\n                        <li key={index} className={`list-group-item list-group-item-action ${selectedStu === index ? 'active' : ''}`} onClick={() => setSelectedStu(index)}>\n                          {ele.name}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n                <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                  <b>Select Mentor</b>\n                  <ul className=\"list-group\">\n                    {mentorList.map((ele, index) => {\n                      return (\n                        <li key={index} className={`list-group-item list-group-item-action ${selectedMent === index ? 'active' : ''}`} onClick={() => setSelectedMent(index)}>\n                          {ele.name}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col-xs-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 mt-2\">\n                {submitLoad === true ? (\n                  <LoadingButton />\n                ) : (\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={mapMentor}  disabled={(selectedStu === -1 || selectedMent === -1) ? true : false}>\n                    Map Mentor\n                  </button>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MapMentors;\n","import { useEffect, useState } from 'react';\nimport env from '../env';\nimport ProgressLoader from '../progress-loader';\nimport LoadingButton from '../loading-button';\nimport { useAlert } from 'react-alert';\n\nconst MapStudents = () => {\n  const alert = useAlert();\n  const [loading, setLoading] = useState(false);\n  const [submitLoad, setSubmitLoad] = useState(false);\n  const [studentList, setStudentList] = useState([]);\n  const [mentorList, setMentorList] = useState([]);\n  const [selectedMent, setSelectedMent] = useState('');\n\n  function selectStu(i) {\n    setStudentList(\n      studentList.map((ele, index) => {\n        if (index === i) {\n          ele.selected = !ele.selected;\n        }\n        return ele;\n      })\n    );\n  }\n\n  async function loadData() {\n    setSelectedMent('');\n    setLoading(true);\n\n    const req = await fetch(`${env}mentors`);\n    const res = await req.json();\n    setMentorList(res);\n\n    const req2 = await fetch(`${env}students`);\n    const res2 = await req2.json();\n    setStudentList(res2);\n    setLoading(false);\n  }\n\n  function setActiveStudents(mentorObj) {\n    console.log(mentorObj, !!mentorObj.students);\n    if (!!mentorObj.students) {\n      setStudentList(\n        studentList.map((ele) => {\n          let count = 0;\n          mentorObj.students.forEach((stu) => {\n            if (stu.name === ele.name) {\n              count++;\n              ele.selected = true;\n            }\n          });\n          if (!count) {\n            ele.selected = false;\n          }\n          return ele;\n        })\n      );\n    } else {\n      setStudentList(\n        studentList.map((ele) => {\n          ele.selected = false;\n          return ele;\n        })\n      );\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function mapMentor() {\n    setSubmitLoad(true);\n    const mentor = mentorList.find((ele) => selectedMent === ele.name);\n    const id = mentor.id;\n    let type = 'success';\n    const data = {\n      students: studentList.filter((ele) => {\n        return ele.selected === true;\n      }),\n    };\n\n    const req = await fetch(`${env}mentors/assign-students/${id}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const res = await req.json();\n    setSubmitLoad(false);\n    if (res.statusCode != 200) {\n      type = 'error';\n    }\n    alert.show(res.message, {\n      type: type,\n    });\n  }\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header mentor-card text-light\">Map Students to Mentor</div>\n        <div className=\"card-body\">\n          {loading == true ? (\n            <ProgressLoader />\n          ) : (\n            <>\n              <div className=\"row\">\n                <div className=\"col-xs-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 d-flex justify-content-end mb-1\">\n                  <button type=\"button\" className=\"btn btn-dark btn-xs\" onClick={loadData}>\n                    <i className=\"fas fa-sync\"></i> &nbsp;Reload Data\n                  </button>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                  <div className=\"dropdown mt-3 mb-5\">\n                    <button className=\"btn btn-secondary btn-xs dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                      Select a Mentor\n                    </button>\n                    <ul className=\"dropdown-menu\">\n                      {mentorList.map((ele, index) => {\n                        return (\n                          <li\n                            key={index}\n                            className={`dropdown-item ${selectedMent === ele.name ? 'active' : ''}`}\n                            onClick={() => {\n                              setSelectedMent(ele.name);\n                              setActiveStudents(ele, index);\n                            }}\n                          >\n                            {ele.name}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                  {selectedMent !== '' ? (\n                    <h4>\n                      <span className=\"badge badge-light\">{selectedMent}</span>\n                    </h4>\n                  ) : (\n                    ''\n                  )}\n                </div>\n                <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                  <b>Select Students</b>\n                  <ul className=\"list-group\">\n                    {studentList.map((ele, index) => {\n                      return (\n                        <li key={index} className={`list-group-item mb-1 list-group-item-action ${ele.selected === true ? 'active' : ''}`} onClick={() => selectStu(index)}>\n                          {ele.name}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"col-xs-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 mt-2\">\n                {submitLoad === true ? (\n                  <LoadingButton />\n                ) : (\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={mapMentor} disabled={selectedMent === '' ? true : false}>\n                    Assign Students\n                  </button>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MapStudents;\n","import AddStudent from './students/add-student';\nimport AddMentor from './mentors/add-mentor';\nimport MapMentors from './students/map-mentors';\nimport MapStudents from './mentors/map-students';\n\nfunction App() {\n  return (\n    <>\n    <h4 className=\"text-center text-light\">Student - Mentor Mapping Application</h4>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-1\">\n            <AddStudent />\n          </div>\n          <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-1\">\n            <AddMentor />\n          </div>\n          <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12 \">\n            <MapMentors />\n          </div>\n          <div className=\"col-xs-6 col-lg-6 col-md-6 col-sm-6 col-xs-12\">\n            <MapStudents />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 2000,\n  offset: '30px',\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}